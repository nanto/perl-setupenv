# -*- Makefile -*-
PERL = perl
PERLBREW_PARALLEL_COUNT = 1
CARTON = $(PERL) local/carton/bin/carton
CARTON_LIB = $(abspath local/carton/lib/perl5)
CARTON_SUPPORT_BIN_PATH = $(abspath local/carton/bin)
CPANM = $(PERL) $(CARTON_SUPPORT_BIN_PATH)/cpanm
CPANM_ = $(CPANM) --notest --verbose -l local/carton
PERL_PATH = $(abspath local/perlbrew/perls/perl-setupenv/bin)
CARTON_ENV = PERL5LIB=$(CARTON_LIB) PATH=$(PERL_PATH):$(CARTON_SUPPORT_BIN_PATH):$(PATH)
SSH = ssh

REMOTEDEV_HOST = develop.test
REMOTEDEV_PERL_PATH = perl

SETUPENV_CURRENT_REVISION = 20120312
SETUPENV_MIN_REVISION = $(SETUPENV_CURRENT_REVISION)

all: local-perl config/perl/libs.txt carton-install

setupenv-update:
ifeq "$(sort $(SETUPENV_CURRENT_REVISION) $(SETUPENV_MIN_REVISION))" "$(SETUPENV_CURRENT_REVISION) $(SETUPENV_MIN_REVISION)"
#$(SETUPENV_CURRENT_REVISION) < $(SETUPENV_MIN_REVISION)
	wget -O Makefile.setupenv https://raw.github.com/wakaba/perl-setupenv/master/Makefile.setupenv
endif

config/perl/libs.txt: local/carton/bin/carton local-submodules
	mkdir -p config/perl
	PERL5LIB=$(CARTON_LIB) PATH=$(PERL_PATH):$(CARTON_SUPPORT_BIN_PATH):$(PATH) $(CARTON) exec -- \
	    $(PERL) -e 'push @INC, glob "local/submodules/*/lib"; print join ":", grep /^local/, @INC' > $@

local/perlbrew/_perlinfo/perl-version:
	mkdir -p local/perlbrew/_perlinfo
	wget -O JSON.sh https://raw.github.com/dominictarr/JSON.sh/master/JSON.sh
	wget -O perl.json http://api.metacpan.org/release/perl
	cat perl.json | sh JSON.sh | grep "\[\"name\"\]" | sed 's/\["[^"]\+"\]\s\+"\([^"]\+\)"/\1/g' > $@

local/perlbrew/bin/perlbrew: local/perlbrew/_perlinfo/perl-version
	wget -O local/install.perlbrew http://install.perlbrew.pl/
	PERLBREW_ROOT=$(abspath local/perlbrew) sh local/install.perlbrew

local-perl: local/perlbrew/bin/perlbrew
	PERLBREW_ROOT=$(abspath local/perlbrew) local/perlbrew/bin/perlbrew \
	    install `cat local/perlbrew/_perlinfo/perl-version` \
	    --notest --as perl-setupenv -j $(PERLBREW_PARALLEL_COUNT)

$(CARTON_SUPPORT_BIN_PATH)/cpanm:
	mkdir -p $(CARTON_SUPPORT_BIN_PATH)
	wget -O $@ http://cpanmin.us
	chmod u+x $@

local/carton/bin/carton: $(CARTON_SUPPORT_BIN_PATH)/cpanm
	$(CARTON_ENV) $(CPANM_) --reinstall ExtUtils::ParseXS
	$(CARTON_ENV) $(CPANM_) CPAN JSON::XS Getopt::Long \
	    Class::Data::Inheritable Devel::StackTrace
	$(CARTON_ENV) $(CPANM_) --reinstall Carton
	touch -c $@

config/perl/modules.txt:
	mkdir -p config/perl
	echo Carp > $@

config/perl/submodules.txt:
	mkdir -p config/perl
	touch $@

local/submodules/Makefile: config/perl/submodules.txt
	mkdir -p local/submodules
	echo "clone:" > $@
	cat $< | perl -n -e 'chomp; undef $$branch; $$branch = $$1 if s{\s+(\S+)\s*$$}{}; m{([^/\s]+)$$}; $$dir = $$1; print "\t(git clone $$_ || (cd $$dir && git pull))\n"; print "\tcd $$dir && (git checkout -b $$branch origin/$$branch || git checkout $$branch)\n" if $$branch' >> $@

local-submodules: local/submodules/Makefile
	cd local/submodules && make clone

carton-install: local-submodules carton.lock carton-install-main

carton.lock: local/carton/bin/carton \
    config/perl/modules.txt \
    $(wildcard config/perl/modules.txt \
	       config/perl/modules.*.txt \
               modules/*/config/perl/modules.txt \
	       modules/*/config/perl/modules.*.txt \
	       local/submodules/*/config/perl/modules.txt \
	       local/submodules/*/config/perl/modules.*.txt)
	-cat config/perl/modules.txt config/perl/modules.*.txt \
	    modules/*/config/perl/modules.txt \
	    modules/*/config/perl/modules.*.txt \
	    local/submodules/*/config/perl/modules.txt \
	    local/submodules/*/config/perl/modules.*.txt | \
	$(CARTON_ENV) xargs $(CARTON) install

carton-update: local/carton/bin/carton \
    config/perl/modules.txt \
    $(wildcard config/perl/modules.txt \
	       config/perl/modules.*.txt \
               modules/*/config/perl/modules.txt \
	       modules/*/config/perl/modules.*.txt \
	       local/submodules/*/config/perl/modules.txt \
	       local/submodules/*/config/perl/modules.*.txt)
	-cat config/perl/modules.txt config/perl/modules.*.txt \
	    modules/*/config/perl/modules.txt \
	    modules/*/config/perl/modules.*.txt \
	    local/submodules/*/config/perl/modules.txt \
	    local/submodules/*/config/perl/modules.*.txt | \
	$(CARTON_ENV)  xargs $(CARTON) install

carton-install-main:
	$(CARTON_ENV) $(CARTON) install --deployment

carton-install-module: local/carton/bin/carton
	$(CARTON_ENV) $(CARTON) install $(CARTON_INSTALL_MODULE)

local/remotedev/remote-directory-name.txt:
	mkdir -p local/remotedev
	$(SSH) $(REMOTEDEV_HOST) "perl -MFile::Temp=tempdir -e 'print tempdir'" > $@

config/remotedev/getreponame.pl:
	mkdir -p config/remotedev
	echo 'my $$repo = `git config --get remote.origin.url` or die "No origin URL";' > $@
	echo 'print $$repo;' >> $@

remotedev-upload: local/remotedev/remote-directory-name.txt config/remotedev/getreponame.pl
	$(SSH) $(REMOTEDEV_HOST) "mkdir -p $(shell cat local/remotedev/remote-directory-name.txt) && cd $(shell cat local/remotedev/remote-directory-name.txt) && ((git clone $(shell $(PERL) config/remotedev/getreponame.pl) repo && cd repo && git checkout -b $(shell git name-rev --name-only HEAD) origin/$(shell git name-rev --name-only HEAD) && git submodule update --init) || (cd repo && (git checkout -b $(shell git name-rev --name-only HEAD) origin/$(shell git name-rev --name-only HEAD) || git checkout $(shell git name-rev --name-only HEAD)) && git pull && git submodule update --init))";

remotedev-setup: remotedev-upload
	$(SSH) $(REMOTEDEV_HOST) "cd $(shell cat local/remotedev/remote-directory-name.txt)/repo && make Makefile.setupenv PERL_PATH=$(REMOTEDEV_PERL_PATH) && make --makefile Makefile.setupenv carton-install PERL_PATH=$(REMOTEDEV_PERL_PATH)";

remotedev-reset:
	rm local/remotedev/remote-directory-name.txt

remotedev-reset-setupenv:
	$(SSH) $(REMOTEDEV_HOST) "cd $(shell cat local/remotedev/remote-directory-name.txt)/repo && rm Makefile.setupenv"

remotedev-test: remotedev-setup
	$(SSH) $(REMOTEDEV_HOST) "cd $(shell cat local/remotedev/remote-directory-name.txt)/repo && make test PERL_PATH=$(REMOTEDEV_PERL_PATH)"

# Add following to your Makefile:
#
#REMOTEDEV_HOST = remotedev.host.example
#REMOTEDEV_PERL_PATH = path/to/remote/server/perl/bin
#PERL_PATH = $(abspath local/perlbrew/perls/perl-setupenv/bin)
#
#test: local-submodules carton-install config/perl/libs.txt
#	PATH=$(PERL_PATH):$(PATH) PERL5LIB=$(shell cat config/perl/libs.txt) \
#	    $(PROVE) t/*.t
#
#Makefile-setupenv: Makefile.setupenv
#	make --makefile Makefile.setupenv setupenv-update \
#	    SETUPENV_MIN_REVISION=20120312
#
#Makefile.setupenv:
#	wget -O $@ https://raw.github.com/wakaba/perl-setupenv/master/Makefile.setupenv
#
#remotedev-test remotedev-reset remotedev-reset-setupenv \
#config/perl/libs.txt \
#carton-install carton-update carton-install-module \
#local-submodules local-perl: %: Makefile-setupenv
#	make --makefile Makefile.setupenv $@ \
#            REMOTEDEV_HOST=$(REMOTEDEV_HOST) \
#            REMOTEDEV_PERL_PATH=$(REMOTEDEV_PERL_PATH)
